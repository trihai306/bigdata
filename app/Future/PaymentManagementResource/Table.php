<?php

namespace App\Future\PaymentManagementResource;

use Adminftr\Widgets\Future\Stat;
use App\Future\PaymentManagementResource\Modal\Base;
use App\Models\Contract;
use Adminftr\Table\Future\BaseTable;
use Adminftr\Table\Future\Components\Actions\Action;
use Adminftr\Table\Future\Components\Actions\Actions;
use Adminftr\Table\Future\Components\Columns\TextColumn;
use Adminftr\Table\Future\Components\Filters\DateFilter;
use Adminftr\Table\Future\Components\Filters\SelectFilter;
use Adminftr\Table\Future\Components\Filters\TextFilter;
use Adminftr\Table\Future\Components\Headers\Actions\ResetAction;
use Illuminate\Database\Eloquent\Builder;

class Table extends BaseTable
{
    protected string $model = Contract::class;
    public string $title = 'Quản lý giao dịch';
    protected function query(): Builder
    {
        return parent::query()->with(["user", "post"]); // TODO: Change the autogenerated stub
    }

    protected function columns(): array
    {
        return [
            TextColumn::make('id', __('ID'))->searchable()->sortable(),
            TextColumn::make('code', __('Mã HĐ'))->searchable()->sortable(),
            TextColumn::make('id_user_b', __('SĐT')),
            TextColumn::make('total_amount', __('Giá ( vnđ )')),
            TextColumn::make('estimated_delivery_date', __('Ngày TT'))->sortable(),
            TextColumn::make('user.name', __('Người TT'))->sortable(),
            TextColumn::make('status', __('Trạng thái'))->badge(
                [
                    'accepted' => 'success',
                    'pending' => 'warning',
                    'returned' => 'danger',
                    'cancel' => 'danger',
                ],
                [
                    'accepted' => __('Hoàn Thành'),
                    'pending' => __('Đợi khiếu nại'),
                    'returned' => __('Hoàn lại tiền'),
                    'cancel' => __('Huỷ'),
                ]
            )
        ];
    }

    protected function filters(): array
    {
        return [
            TextFilter::make('code', __('Mã HĐ')),
            SelectFilter::make('status', __('Trạng thái'))->options([
                ['id' => 'accepted', 'label' => 'Hoàn Thành'],
                ['id' => 'pending', 'label' => 'Đợi khiếu nại'],
                ['id' => 'returned', 'label' => 'Hoàn lại tiền'],
                ['id' => 'cancel', 'label' => 'Huỷ'],
            ]),
            DateFilter::make('created_at', __('Ngày tạo')),
        ];
    }

    protected function actions(Actions $actions): Actions
    {
        return $actions->create(
            [
                Action::make('updateStatus', __('Xác nhận thanh toán'), 'fas fa-edit')->modal(Base::class,'edit'),
               /* Action::make('delete', __('Xoá'), 'fas fa-trash-alt')->confirm(function ($data) {
                    return [
                        'message' => __('Bạn cho chắc muốn xoá hợp đồng?'),
                        'params' => $data, 'nameMethod' => 'delete',
                    ];
                }),*/
            ]
        );
    }

    protected function headerActions(): array
    {
        return [
            ResetAction::make(),
        ];
    }

    protected function widgets(): array
    {
        //danh sách chưa thanh toán
        $total = Contract::where('status', 'pending')->sum('total_amount');
        //danh sách đã thanh toán
        $totalAccepted = Contract::where('status', 'accepted')->sum('total_amount');
        // danh sách từ chối
        $totalCancel = Contract::where('status', 'shop_cancellation')->sum('total_amount');
        return [
            Stat::make('Tổng số giao dịch', Contract::count()),
            Stat::make('Tổng số tiền chưa thanh toán', $total),
            Stat::make('Tổng số tiền đã thanh toán', $totalAccepted),
            Stat::make('Tổng số tiền đã huỷ', $totalCancel),
        ];
    }
}
